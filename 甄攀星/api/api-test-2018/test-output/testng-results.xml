<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="7" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-12-28T01:08:14Z" name="test" finished-at="2018-12-28T01:08:15Z" duration-ms="1581">
    <groups>
    </groups>
    <test started-at="2018-12-28T01:08:14Z" name="test" finished-at="2018-12-28T01:08:15Z" duration-ms="1581">
      <class name="com.edu.scene.test.GetTranspotFee_Test">
        <test-method signature="getFee_test()[pri:0, instance:com.edu.scene.test.GetTranspotFee_Test@3e11f9e9]" started-at="2018-12-28T01:08:15Z" name="getFee_test" description="查询运费信息" finished-at="2018-12-28T01:08:15Z" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFee_test -->
      </class> <!-- com.edu.scene.test.GetTranspotFee_Test -->
      <class name="com.edu.scene.test.Login_Test">
        <test-method signature="login_test(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.edu.scene.test.Login_Test@f0da945]" started-at="2018-12-28T01:08:14Z" name="login_test" description="正常登录情况" data-provider="login" finished-at="2018-12-28T01:08:14Z" duration-ms="582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20000000000]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[netease123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_test -->
      </class> <!-- com.edu.scene.test.Login_Test -->
      <class name="com.edu.scene.test.AddressDelete_Test">
        <test-method signature="addressDelete_test()[pri:0, instance:com.edu.scene.test.AddressDelete_Test@729d991e]" started-at="2018-12-28T01:08:15Z" name="addressDelete_test" description="删除地址" finished-at="2018-12-28T01:08:15Z" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressDelete_test -->
      </class> <!-- com.edu.scene.test.AddressDelete_Test -->
      <class name="com.edu.scene.test.SkuList_Test">
        <test-method signature="skulist_test()[pri:0, instance:com.edu.scene.test.SkuList_Test@316bcf94]" started-at="2018-12-28T01:08:14Z" name="skulist_test" description="查询商品列表" finished-at="2018-12-28T01:08:15Z" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skulist_test -->
      </class> <!-- com.edu.scene.test.SkuList_Test -->
      <class name="com.edu.scene.test.AddressList_Test">
        <test-method signature="getAddressList_test()[pri:0, instance:com.edu.scene.test.AddressList_Test@6404f418]" started-at="2018-12-28T01:08:15Z" name="getAddressList_test" description="查询收货地址成功" finished-at="2018-12-28T01:08:15Z" duration-ms="236" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [请重新登录]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [请重新登录]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.edu.scene.test.AddressList_Test.getAddressList_test(AddressList_Test.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAddressList_test -->
      </class> <!-- com.edu.scene.test.AddressList_Test -->
      <class name="com.edu.scene.test.AddAddress_Test">
        <test-method signature="addAddress_test()[pri:0, instance:com.edu.scene.test.AddAddress_Test@1de5f259]" started-at="2018-12-28T01:08:15Z" name="addAddress_test" description="添加新地址" finished-at="2018-12-28T01:08:15Z" duration-ms="225" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [最多只能添加6个地址]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [最多只能添加6个地址]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.edu.scene.test.AddAddress_Test.addAddress_test(AddAddress_Test.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress_test -->
      </class> <!-- com.edu.scene.test.AddAddress_Test -->
    </test> <!-- test -->
  </suite> <!-- test -->
</testng-results>
