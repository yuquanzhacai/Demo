<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="test"
           tests="1"
           failures="1"
           errors="0"
           skipped="0"
           time="0.225">
  <properties />
            <testcase name="addAddress_test" time="0.225" classname="com.edu.scene.test.AddAddress_Test">
                <failure type="java.lang.AssertionError"
                  message="expected [success] but found [最多只能添加6个地址]"
              >
<![CDATA[java.lang.AssertionError: expected [success] but found [最多只能添加6个地址]
  org.testng.Assert.fail(Assert.java:96)
  org.testng.Assert.failNotEquals(Assert.java:776)
  org.testng.Assert.assertEqualsImpl(Assert.java:137)
  org.testng.Assert.assertEquals(Assert.java:118)
  org.testng.Assert.assertEquals(Assert.java:453)
  org.testng.Assert.assertEquals(Assert.java:463)
  com.edu.scene.test.AddAddress_Test.addAddress_test(AddAddress_Test.java:29)
  java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.base/java.lang.reflect.Method.invoke(Method.java:564)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
  org.testng.TestRunner.privateRun(TestRunner.java:648)
  org.testng.TestRunner.run(TestRunner.java:505)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
  org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
  org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
  org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
  java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
  java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
  java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
  java.base/java.lang.Thread.run(Thread.java:844)
]]>
      </failure>

          </testcase>
  
  
  
</testsuite>
